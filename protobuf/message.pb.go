// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: message.proto

package protobuf

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ByteArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ByteArray) Reset() {
	*x = ByteArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByteArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteArray) ProtoMessage() {}

func (x *ByteArray) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteArray.ProtoReflect.Descriptor instead.
func (*ByteArray) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *ByteArray) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTransactionCoreInfoL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      *uint32    `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Nonce        *uint64    `protobuf:"varint,2,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Toaddr       []byte     `protobuf:"bytes,3,opt,name=toaddr,proto3,oneof" json:"toaddr,omitempty"`
	Senderpubkey *ByteArray `protobuf:"bytes,4,opt,name=senderpubkey,proto3,oneof" json:"senderpubkey,omitempty"`
	Amount       *ByteArray `protobuf:"bytes,5,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
	Gasprice     *ByteArray `protobuf:"bytes,6,opt,name=gasprice,proto3,oneof" json:"gasprice,omitempty"`
	Gaslimit     *uint64    `protobuf:"varint,7,opt,name=gaslimit,proto3,oneof" json:"gaslimit,omitempty"`
	Code         []byte     `protobuf:"bytes,8,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Data         []byte     `protobuf:"bytes,9,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *ProtoTransactionCoreInfoL) Reset() {
	*x = ProtoTransactionCoreInfoL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionCoreInfoL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionCoreInfoL) ProtoMessage() {}

func (x *ProtoTransactionCoreInfoL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionCoreInfoL.ProtoReflect.Descriptor instead.
func (*ProtoTransactionCoreInfoL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoTransactionCoreInfoL) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ProtoTransactionCoreInfoL) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoTransactionCoreInfoL) GetToaddr() []byte {
	if x != nil {
		return x.Toaddr
	}
	return nil
}

func (x *ProtoTransactionCoreInfoL) GetSenderpubkey() *ByteArray {
	if x != nil {
		return x.Senderpubkey
	}
	return nil
}

func (x *ProtoTransactionCoreInfoL) GetAmount() *ByteArray {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *ProtoTransactionCoreInfoL) GetGasprice() *ByteArray {
	if x != nil {
		return x.Gasprice
	}
	return nil
}

func (x *ProtoTransactionCoreInfoL) GetGaslimit() uint64 {
	if x != nil && x.Gaslimit != nil {
		return *x.Gaslimit
	}
	return 0
}

func (x *ProtoTransactionCoreInfoL) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ProtoTransactionCoreInfoL) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTransactionL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tranid    []byte                     `protobuf:"bytes,1,opt,name=tranid,proto3,oneof" json:"tranid,omitempty"`
	Info      *ProtoTransactionCoreInfoL `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	Signature *ByteArray                 `protobuf:"bytes,3,opt,name=signature,proto3,oneof" json:"signature,omitempty"`
}

func (x *ProtoTransactionL) Reset() {
	*x = ProtoTransactionL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionL) ProtoMessage() {}

func (x *ProtoTransactionL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionL.ProtoReflect.Descriptor instead.
func (*ProtoTransactionL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoTransactionL) GetTranid() []byte {
	if x != nil {
		return x.Tranid
	}
	return nil
}

func (x *ProtoTransactionL) GetInfo() *ProtoTransactionCoreInfoL {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ProtoTransactionL) GetSignature() *ByteArray {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ProtoTransactionReceiptL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipt []byte  `protobuf:"bytes,1,opt,name=receipt,proto3,oneof" json:"receipt,omitempty"`
	Cumgas  *uint64 `protobuf:"varint,2,opt,name=cumgas,proto3,oneof" json:"cumgas,omitempty"`
}

func (x *ProtoTransactionReceiptL) Reset() {
	*x = ProtoTransactionReceiptL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionReceiptL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionReceiptL) ProtoMessage() {}

func (x *ProtoTransactionReceiptL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionReceiptL.ProtoReflect.Descriptor instead.
func (*ProtoTransactionReceiptL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoTransactionReceiptL) GetReceipt() []byte {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *ProtoTransactionReceiptL) GetCumgas() uint64 {
	if x != nil && x.Cumgas != nil {
		return *x.Cumgas
	}
	return 0
}

type ProtoTransactionWithReceiptL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *ProtoTransactionL        `protobuf:"bytes,1,opt,name=transaction,proto3,oneof" json:"transaction,omitempty"`
	Receipt     *ProtoTransactionReceiptL `protobuf:"bytes,2,opt,name=receipt,proto3,oneof" json:"receipt,omitempty"`
}

func (x *ProtoTransactionWithReceiptL) Reset() {
	*x = ProtoTransactionWithReceiptL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransactionWithReceiptL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransactionWithReceiptL) ProtoMessage() {}

func (x *ProtoTransactionWithReceiptL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransactionWithReceiptL.ProtoReflect.Descriptor instead.
func (*ProtoTransactionWithReceiptL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoTransactionWithReceiptL) GetTransaction() *ProtoTransactionL {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *ProtoTransactionWithReceiptL) GetReceipt() *ProtoTransactionReceiptL {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type ProtoAccountBaseL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     *uint32    `protobuf:"varint,1,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Balance     *ByteArray `protobuf:"bytes,2,opt,name=balance,proto3,oneof" json:"balance,omitempty"`
	Nonce       *uint64    `protobuf:"varint,3,opt,name=nonce,proto3,oneof" json:"nonce,omitempty"`
	Codehash    []byte     `protobuf:"bytes,4,opt,name=codehash,proto3,oneof" json:"codehash,omitempty"`
	Storageroot []byte     `protobuf:"bytes,5,opt,name=storageroot,proto3,oneof" json:"storageroot,omitempty"`
}

func (x *ProtoAccountBaseL) Reset() {
	*x = ProtoAccountBaseL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAccountBaseL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAccountBaseL) ProtoMessage() {}

func (x *ProtoAccountBaseL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAccountBaseL.ProtoReflect.Descriptor instead.
func (*ProtoAccountBaseL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoAccountBaseL) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ProtoAccountBaseL) GetBalance() *ByteArray {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *ProtoAccountBaseL) GetNonce() uint64 {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return 0
}

func (x *ProtoAccountBaseL) GetCodehash() []byte {
	if x != nil {
		return x.Codehash
	}
	return nil
}

func (x *ProtoAccountBaseL) GetStorageroot() []byte {
	if x != nil {
		return x.Storageroot
	}
	return nil
}

// Used in databases "dsBlocks", "microBlocks", "txBlocks", "VCBlocks"
type ProtoBlockBaseL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockhash []byte                         `protobuf:"bytes,1,opt,name=blockhash,proto3" json:"blockhash,omitempty"`  // Added in: v1.0, Deprecated in: N/A
	Cosigs    *ProtoBlockBaseL_CoSignaturesL `protobuf:"bytes,2,opt,name=cosigs,proto3" json:"cosigs,omitempty"`        // Added in: v1.0, Deprecated in: N/A
	Timestamp uint64                         `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoBlockBaseL) Reset() {
	*x = ProtoBlockBaseL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlockBaseL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlockBaseL) ProtoMessage() {}

func (x *ProtoBlockBaseL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlockBaseL.ProtoReflect.Descriptor instead.
func (*ProtoBlockBaseL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoBlockBaseL) GetBlockhash() []byte {
	if x != nil {
		return x.Blockhash
	}
	return nil
}

func (x *ProtoBlockBaseL) GetCosigs() *ProtoBlockBaseL_CoSignaturesL {
	if x != nil {
		return x.Cosigs
	}
	return nil
}

func (x *ProtoBlockBaseL) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Used in "dsBlockHeader", "microBlockHeader", "txBlockHeader", and "VCBlockHeader"
type ProtoBlockHeaderBaseL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`            // Added in: v1.0, Deprecated in: N/A
	Committeehash []byte `protobuf:"bytes,2,opt,name=committeehash,proto3" json:"committeehash,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Prevhash      []byte `protobuf:"bytes,3,opt,name=prevhash,proto3" json:"prevhash,omitempty"`           // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoBlockHeaderBaseL) Reset() {
	*x = ProtoBlockHeaderBaseL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlockHeaderBaseL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlockHeaderBaseL) ProtoMessage() {}

func (x *ProtoBlockHeaderBaseL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlockHeaderBaseL.ProtoReflect.Descriptor instead.
func (*ProtoBlockHeaderBaseL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoBlockHeaderBaseL) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProtoBlockHeaderBaseL) GetCommitteehash() []byte {
	if x != nil {
		return x.Committeehash
	}
	return nil
}

func (x *ProtoBlockHeaderBaseL) GetPrevhash() []byte {
	if x != nil {
		return x.Prevhash
	}
	return nil
}

// Used in database "dsBlocks"
type ProtoDSBlockL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *ProtoDSBlockL_DSBlockHeaderL `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	Blockbase *ProtoBlockBaseL              `protobuf:"bytes,2,opt,name=blockbase,proto3" json:"blockbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoDSBlockL) Reset() {
	*x = ProtoDSBlockL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlockL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlockL) ProtoMessage() {}

func (x *ProtoDSBlockL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlockL.ProtoReflect.Descriptor instead.
func (*ProtoDSBlockL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoDSBlockL) GetHeader() *ProtoDSBlockL_DSBlockHeaderL {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoDSBlockL) GetBlockbase() *ProtoBlockBaseL {
	if x != nil {
		return x.Blockbase
	}
	return nil
}

// Used in database "txBlocks"
type ProtoMbInfoL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mbhash []byte `protobuf:"bytes,1,opt,name=mbhash,proto3" json:"mbhash,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Txroot []byte `protobuf:"bytes,2,opt,name=txroot,proto3" json:"txroot,omitempty"` // Added in: v1.0, Deprecated in: N/A
	// Types that are assignable to Oneof3:
	//	*ProtoMbInfoL_Shardid
	Oneof3 isProtoMbInfoL_Oneof3 `protobuf_oneof:"oneof3"`
}

func (x *ProtoMbInfoL) Reset() {
	*x = ProtoMbInfoL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMbInfoL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMbInfoL) ProtoMessage() {}

func (x *ProtoMbInfoL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMbInfoL.ProtoReflect.Descriptor instead.
func (*ProtoMbInfoL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoMbInfoL) GetMbhash() []byte {
	if x != nil {
		return x.Mbhash
	}
	return nil
}

func (x *ProtoMbInfoL) GetTxroot() []byte {
	if x != nil {
		return x.Txroot
	}
	return nil
}

func (m *ProtoMbInfoL) GetOneof3() isProtoMbInfoL_Oneof3 {
	if m != nil {
		return m.Oneof3
	}
	return nil
}

func (x *ProtoMbInfoL) GetShardid() uint32 {
	if x, ok := x.GetOneof3().(*ProtoMbInfoL_Shardid); ok {
		return x.Shardid
	}
	return 0
}

type isProtoMbInfoL_Oneof3 interface {
	isProtoMbInfoL_Oneof3()
}

type ProtoMbInfoL_Shardid struct {
	Shardid uint32 `protobuf:"varint,3,opt,name=shardid,proto3,oneof"`
}

func (*ProtoMbInfoL_Shardid) isProtoMbInfoL_Oneof3() {}

// Used in database "txBlocks"
type ProtoTxBlockL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *ProtoTxBlockL_TxBlockHeaderL `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	Mbinfos   []*ProtoMbInfoL               `protobuf:"bytes,2,rep,name=mbinfos,proto3" json:"mbinfos,omitempty"`     // Added in: v1.0, Deprecated in: N/A
	Blockbase *ProtoBlockBaseL              `protobuf:"bytes,3,opt,name=blockbase,proto3" json:"blockbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoTxBlockL) Reset() {
	*x = ProtoTxBlockL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxBlockL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxBlockL) ProtoMessage() {}

func (x *ProtoTxBlockL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxBlockL.ProtoReflect.Descriptor instead.
func (*ProtoTxBlockL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoTxBlockL) GetHeader() *ProtoTxBlockL_TxBlockHeaderL {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ProtoTxBlockL) GetMbinfos() []*ProtoMbInfoL {
	if x != nil {
		return x.Mbinfos
	}
	return nil
}

func (x *ProtoTxBlockL) GetBlockbase() *ProtoBlockBaseL {
	if x != nil {
		return x.Blockbase
	}
	return nil
}

type ProtoBlockBaseL_CoSignaturesL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cs1 *ByteArray `protobuf:"bytes,1,opt,name=cs1,proto3" json:"cs1,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	B1  []bool     `protobuf:"varint,2,rep,packed,name=b1,proto3" json:"b1,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Cs2 *ByteArray `protobuf:"bytes,3,opt,name=cs2,proto3" json:"cs2,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	B2  []bool     `protobuf:"varint,4,rep,packed,name=b2,proto3" json:"b2,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoBlockBaseL_CoSignaturesL) Reset() {
	*x = ProtoBlockBaseL_CoSignaturesL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBlockBaseL_CoSignaturesL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBlockBaseL_CoSignaturesL) ProtoMessage() {}

func (x *ProtoBlockBaseL_CoSignaturesL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBlockBaseL_CoSignaturesL.ProtoReflect.Descriptor instead.
func (*ProtoBlockBaseL_CoSignaturesL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ProtoBlockBaseL_CoSignaturesL) GetCs1() *ByteArray {
	if x != nil {
		return x.Cs1
	}
	return nil
}

func (x *ProtoBlockBaseL_CoSignaturesL) GetB1() []bool {
	if x != nil {
		return x.B1
	}
	return nil
}

func (x *ProtoBlockBaseL_CoSignaturesL) GetCs2() *ByteArray {
	if x != nil {
		return x.Cs2
	}
	return nil
}

func (x *ProtoBlockBaseL_CoSignaturesL) GetB2() []bool {
	if x != nil {
		return x.B2
	}
	return nil
}

type ProtoDSBlockL_DSBlockHashSetL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shardinghash  []byte `protobuf:"bytes,1,opt,name=shardinghash,proto3" json:"shardinghash,omitempty"`   // Added in: v1.0, Deprecated in: N/A
	Reservedfield []byte `protobuf:"bytes,2,opt,name=reservedfield,proto3" json:"reservedfield,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoDSBlockL_DSBlockHashSetL) Reset() {
	*x = ProtoDSBlockL_DSBlockHashSetL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlockL_DSBlockHashSetL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlockL_DSBlockHashSetL) ProtoMessage() {}

func (x *ProtoDSBlockL_DSBlockHashSetL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlockL_DSBlockHashSetL.ProtoReflect.Descriptor instead.
func (*ProtoDSBlockL_DSBlockHashSetL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ProtoDSBlockL_DSBlockHashSetL) GetShardinghash() []byte {
	if x != nil {
		return x.Shardinghash
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHashSetL) GetReservedfield() []byte {
	if x != nil {
		return x.Reservedfield
	}
	return nil
}

type ProtoDSBlockL_DSBlockHeaderL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockheaderbase *ProtoBlockHeaderBaseL                        `protobuf:"bytes,1,opt,name=blockheaderbase,proto3" json:"blockheaderbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Dsdifficulty    uint32                                        `protobuf:"varint,2,opt,name=dsdifficulty,proto3" json:"dsdifficulty,omitempty"`      // Added in: v1.0, Deprecated in: N/A, Only LSB used
	Difficulty      uint32                                        `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`          // Added in: v1.0, Deprecated in: N/A, Only LSB used
	Prevhash        []byte                                        `protobuf:"bytes,4,opt,name=prevhash,proto3" json:"prevhash,omitempty"`               // Added in: v1.0, Deprecated in: N/A, 32 bytes
	Leaderpubkey    *ByteArray                                    `protobuf:"bytes,5,opt,name=leaderpubkey,proto3" json:"leaderpubkey,omitempty"`       // Added in: v1.0, Deprecated in: N/A
	Blocknum        uint64                                        `protobuf:"varint,6,opt,name=blocknum,proto3" json:"blocknum,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Epochnum        uint64                                        `protobuf:"varint,7,opt,name=epochnum,proto3" json:"epochnum,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Gasprice        *ByteArray                                    `protobuf:"bytes,8,opt,name=gasprice,proto3" json:"gasprice,omitempty"`               // Added in: v1.0, Deprecated in: N/A
	Swinfo          *ByteArray                                    `protobuf:"bytes,9,opt,name=swinfo,proto3" json:"swinfo,omitempty"`                   // Added in: v1.0, Deprecated in: N/A
	Dswinners       []*ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL `protobuf:"bytes,10,rep,name=dswinners,proto3" json:"dswinners,omitempty"`            // Added in: v1.0, Deprecated in: N/A
	Hash            *ProtoDSBlockL_DSBlockHashSetL                `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`                      // Added in: v1.0, Deprecated in: N/A
	Dsremoved       []*ByteArray                                  `protobuf:"bytes,12,rep,name=dsremoved,proto3" json:"dsremoved,omitempty"`            // Added in: v2.0, Deprecated in: N/A
	Proposals       []*ProtoDSBlockL_DSBlockHeaderL_ProposalL     `protobuf:"bytes,13,rep,name=proposals,proto3" json:"proposals,omitempty"`
}

func (x *ProtoDSBlockL_DSBlockHeaderL) Reset() {
	*x = ProtoDSBlockL_DSBlockHeaderL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlockL_DSBlockHeaderL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlockL_DSBlockHeaderL) ProtoMessage() {}

func (x *ProtoDSBlockL_DSBlockHeaderL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlockL_DSBlockHeaderL.ProtoReflect.Descriptor instead.
func (*ProtoDSBlockL_DSBlockHeaderL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1}
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetBlockheaderbase() *ProtoBlockHeaderBaseL {
	if x != nil {
		return x.Blockheaderbase
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetDsdifficulty() uint32 {
	if x != nil {
		return x.Dsdifficulty
	}
	return 0
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetPrevhash() []byte {
	if x != nil {
		return x.Prevhash
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetLeaderpubkey() *ByteArray {
	if x != nil {
		return x.Leaderpubkey
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetBlocknum() uint64 {
	if x != nil {
		return x.Blocknum
	}
	return 0
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetEpochnum() uint64 {
	if x != nil {
		return x.Epochnum
	}
	return 0
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetGasprice() *ByteArray {
	if x != nil {
		return x.Gasprice
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetSwinfo() *ByteArray {
	if x != nil {
		return x.Swinfo
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetDswinners() []*ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL {
	if x != nil {
		return x.Dswinners
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetHash() *ProtoDSBlockL_DSBlockHashSetL {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetDsremoved() []*ByteArray {
	if x != nil {
		return x.Dsremoved
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL) GetProposals() []*ProtoDSBlockL_DSBlockHeaderL_ProposalL {
	if x != nil {
		return x.Proposals
	}
	return nil
}

type ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *ByteArray `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Val *ByteArray `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"` // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) Reset() {
	*x = ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) ProtoMessage() {}

func (x *ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL.ProtoReflect.Descriptor instead.
func (*ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) GetKey() *ByteArray {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL) GetVal() *ByteArray {
	if x != nil {
		return x.Val
	}
	return nil
}

// Add new members here
type ProtoDSBlockL_DSBlockHeaderL_VoteL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ProtoDSBlockL_DSBlockHeaderL_VoteL) Reset() {
	*x = ProtoDSBlockL_DSBlockHeaderL_VoteL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlockL_DSBlockHeaderL_VoteL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlockL_DSBlockHeaderL_VoteL) ProtoMessage() {}

func (x *ProtoDSBlockL_DSBlockHeaderL_VoteL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlockL_DSBlockHeaderL_VoteL.ProtoReflect.Descriptor instead.
func (*ProtoDSBlockL_DSBlockHeaderL_VoteL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 1}
}

func (x *ProtoDSBlockL_DSBlockHeaderL_VoteL) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ProtoDSBlockL_DSBlockHeaderL_VoteL) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ProtoDSBlockL_DSBlockHeaderL_ProposalL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalidL uint32                                `protobuf:"varint,1,opt,name=proposalidL,proto3" json:"proposalidL,omitempty"`
	Dsvotes     []*ProtoDSBlockL_DSBlockHeaderL_VoteL `protobuf:"bytes,2,rep,name=dsvotes,proto3" json:"dsvotes,omitempty"`
	Minervotes  []*ProtoDSBlockL_DSBlockHeaderL_VoteL `protobuf:"bytes,3,rep,name=minervotes,proto3" json:"minervotes,omitempty"`
}

func (x *ProtoDSBlockL_DSBlockHeaderL_ProposalL) Reset() {
	*x = ProtoDSBlockL_DSBlockHeaderL_ProposalL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDSBlockL_DSBlockHeaderL_ProposalL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDSBlockL_DSBlockHeaderL_ProposalL) ProtoMessage() {}

func (x *ProtoDSBlockL_DSBlockHeaderL_ProposalL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDSBlockL_DSBlockHeaderL_ProposalL.ProtoReflect.Descriptor instead.
func (*ProtoDSBlockL_DSBlockHeaderL_ProposalL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 2}
}

func (x *ProtoDSBlockL_DSBlockHeaderL_ProposalL) GetProposalidL() uint32 {
	if x != nil {
		return x.ProposalidL
	}
	return 0
}

func (x *ProtoDSBlockL_DSBlockHeaderL_ProposalL) GetDsvotes() []*ProtoDSBlockL_DSBlockHeaderL_VoteL {
	if x != nil {
		return x.Dsvotes
	}
	return nil
}

func (x *ProtoDSBlockL_DSBlockHeaderL_ProposalL) GetMinervotes() []*ProtoDSBlockL_DSBlockHeaderL_VoteL {
	if x != nil {
		return x.Minervotes
	}
	return nil
}

type ProtoTxBlockL_TxBlockHashSetL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stateroothash  []byte `protobuf:"bytes,1,opt,name=stateroothash,proto3" json:"stateroothash,omitempty"`   // Added in: v1.0, Deprecated in: N/A
	Statedeltahash []byte `protobuf:"bytes,2,opt,name=statedeltahash,proto3" json:"statedeltahash,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Mbinfohash     []byte `protobuf:"bytes,3,opt,name=mbinfohash,proto3" json:"mbinfohash,omitempty"`         // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoTxBlockL_TxBlockHashSetL) Reset() {
	*x = ProtoTxBlockL_TxBlockHashSetL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxBlockL_TxBlockHashSetL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxBlockL_TxBlockHashSetL) ProtoMessage() {}

func (x *ProtoTxBlockL_TxBlockHashSetL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxBlockL_TxBlockHashSetL.ProtoReflect.Descriptor instead.
func (*ProtoTxBlockL_TxBlockHashSetL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ProtoTxBlockL_TxBlockHashSetL) GetStateroothash() []byte {
	if x != nil {
		return x.Stateroothash
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHashSetL) GetStatedeltahash() []byte {
	if x != nil {
		return x.Statedeltahash
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHashSetL) GetMbinfohash() []byte {
	if x != nil {
		return x.Mbinfohash
	}
	return nil
}

type ProtoTxBlockL_TxBlockHeaderL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockheaderbase *ProtoBlockHeaderBaseL         `protobuf:"bytes,1,opt,name=blockheaderbase,proto3" json:"blockheaderbase,omitempty"` // Added in: v1.0, Deprecated in: N/A
	Gaslimit        uint64                         `protobuf:"varint,2,opt,name=gaslimit,proto3" json:"gaslimit,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Gasused         *uint64                        `protobuf:"varint,3,opt,name=gasused,proto3,oneof" json:"gasused,omitempty"`          // Added in: v1.0, Deprecated in: N/A
	Rewards         *ByteArray                     `protobuf:"bytes,4,opt,name=rewards,proto3" json:"rewards,omitempty"`                 // Added in: v1.0, Deprecated in: N/A
	Prevhash        []byte                         `protobuf:"bytes,5,opt,name=prevhash,proto3" json:"prevhash,omitempty"`               // Added in: v1.0, Deprecated in: N/A
	Blocknum        uint64                         `protobuf:"varint,6,opt,name=blocknum,proto3" json:"blocknum,omitempty"`              // Added in: v1.0, Deprecated in: N/A
	Hash            *ProtoTxBlockL_TxBlockHashSetL `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`                       // Added in: v1.0, Deprecated in: N/A
	Numtxs          *uint32                        `protobuf:"varint,8,opt,name=numtxs,proto3,oneof" json:"numtxs,omitempty"`            // Added in: v1.0, Deprecated in: N/A
	Minerpubkey     *ByteArray                     `protobuf:"bytes,9,opt,name=minerpubkey,proto3" json:"minerpubkey,omitempty"`         // Added in: v1.0, Deprecated in: N/A
	Dsblocknum      uint64                         `protobuf:"varint,10,opt,name=dsblocknum,proto3" json:"dsblocknum,omitempty"`         // Added in: v1.0, Deprecated in: N/A
}

func (x *ProtoTxBlockL_TxBlockHeaderL) Reset() {
	*x = ProtoTxBlockL_TxBlockHeaderL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTxBlockL_TxBlockHeaderL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTxBlockL_TxBlockHeaderL) ProtoMessage() {}

func (x *ProtoTxBlockL_TxBlockHeaderL) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTxBlockL_TxBlockHeaderL.ProtoReflect.Descriptor instead.
func (*ProtoTxBlockL_TxBlockHeaderL) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetBlockheaderbase() *ProtoBlockHeaderBaseL {
	if x != nil {
		return x.Blockheaderbase
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetGaslimit() uint64 {
	if x != nil {
		return x.Gaslimit
	}
	return 0
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetGasused() uint64 {
	if x != nil && x.Gasused != nil {
		return *x.Gasused
	}
	return 0
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetRewards() *ByteArray {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetPrevhash() []byte {
	if x != nil {
		return x.Prevhash
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetBlocknum() uint64 {
	if x != nil {
		return x.Blocknum
	}
	return 0
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetHash() *ProtoTxBlockL_TxBlockHashSetL {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetNumtxs() uint32 {
	if x != nil && x.Numtxs != nil {
		return *x.Numtxs
	}
	return 0
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetMinerpubkey() *ByteArray {
	if x != nil {
		return x.Minerpubkey
	}
	return nil
}

func (x *ProtoTxBlockL_TxBlockHeaderL) GetDsblocknum() uint64 {
	if x != nil {
		return x.Dsblocknum
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2d, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x17, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe6,
	0x03, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x12, 0x1d, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x06, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c,
	0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x48, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x48, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x05, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x06, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x67, 0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x61, 0x73,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd4, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x12, 0x1b, 0x0a,
	0x06, 0x74, 0x72, 0x61, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x06, 0x74, 0x72, 0x61, 0x6e, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69,
	0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x48, 0x01, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x3c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x02, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6d,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c, 0x12, 0x1d, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x75, 0x6d,
	0x67, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x06, 0x63, 0x75, 0x6d,
	0x67, 0x61, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x6d, 0x67, 0x61, 0x73, 0x22, 0xcd, 0x01,
	0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c, 0x12, 0x48,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x5a, 0x69, 0x6c, 0x6c,
	0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x4c, 0x48, 0x01, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x22, 0x8e, 0x02,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x4c, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x01,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x05, 0x6e,
	0x6f, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x64,
	0x65, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6e, 0x6f, 0x6e, 0x63,
	0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0xa8,
	0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73,
	0x65, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x45, 0x0a, 0x06, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65,
	0x4c, 0x2e, 0x43, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x4c, 0x52,
	0x06, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x91, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x4c, 0x12, 0x2b, 0x0a, 0x03, 0x63, 0x73, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x03, 0x63, 0x73, 0x31, 0x12, 0x12, 0x0a, 0x02, 0x62, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08,
	0x42, 0x02, 0x10, 0x01, 0x52, 0x02, 0x62, 0x31, 0x12, 0x2b, 0x0a, 0x03, 0x63, 0x73, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x52, 0x03, 0x63, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x02, 0x62, 0x32, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x08, 0x42, 0x02, 0x10, 0x01, 0x52, 0x02, 0x62, 0x32, 0x22, 0x73, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x65, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x22, 0xb4,
	0x0a, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x12, 0x44, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x2e,
	0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x5a, 0x69, 0x6c, 0x6c,
	0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x5b, 0x0a, 0x0f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x53, 0x65, 0x74, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x1a, 0xc0, 0x08, 0x0a, 0x0e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x4c, 0x12, 0x4f, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x4c, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x62, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x73, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x73,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72,
	0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a,
	0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x6e, 0x75, 0x6d, 0x12, 0x35, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x08, 0x67, 0x61, 0x73, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x06, 0x73, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x09, 0x64, 0x73, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x5a, 0x69, 0x6c,
	0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x2e, 0x50, 0x6f, 0x77, 0x44, 0x53, 0x57, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x73, 0x4c, 0x52, 0x09, 0x64, 0x73, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x41, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x2e, 0x44,
	0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x53, 0x65, 0x74, 0x4c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x73, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x52, 0x09, 0x64, 0x73, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x54, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x2e,
	0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x73, 0x1a, 0x69, 0x0a, 0x0d, 0x50, 0x6f, 0x77, 0x44, 0x53, 0x57, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x4c, 0x12, 0x2b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x1a, 0x33,
	0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0xcf, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x69, 0x64, 0x4c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x69, 0x64, 0x4c, 0x12, 0x4c, 0x0a, 0x07, 0x64, 0x73, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x4c, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x4c, 0x52, 0x07, 0x64, 0x73, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x12, 0x52, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x53, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x2e, 0x44, 0x53, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x4c, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x4c, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x76, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x62, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x62, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x78, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74,
	0x78, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x69,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x33, 0x22, 0xad, 0x06, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x12, 0x44, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x2e, 0x54, 0x78, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x52, 0x07, 0x6d, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x7f, 0x0a, 0x0f, 0x54, 0x78,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x53, 0x65, 0x74, 0x4c, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x72, 0x6f, 0x6f, 0x74, 0x68,
	0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x62, 0x69, 0x6e, 0x66, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x6d, 0x62, 0x69, 0x6e, 0x66, 0x6f, 0x68, 0x61, 0x73, 0x68, 0x1a, 0xdd, 0x03, 0x0a, 0x0e,
	0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x12, 0x4f,
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x4c, 0x52, 0x0f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x67,
	0x61, 0x73, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07,
	0x67, 0x61, 0x73, 0x75, 0x73, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a, 0x69,
	0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x6e, 0x75, 0x6d, 0x12, 0x41, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x5a, 0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x78, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x2e, 0x54, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x53, 0x65, 0x74, 0x4c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x74, 0x78, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x74, 0x78, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x5a,
	0x69, 0x6c, 0x6c, 0x69, 0x71, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x73, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x6e,
	0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x73, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x6e, 0x75, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x67, 0x61, 0x73, 0x75, 0x73, 0x65, 0x64,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x75, 0x6d, 0x74, 0x78, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_message_proto_goTypes = []interface{}{
	(*ByteArray)(nil),                                  // 0: ZilliqaMessage.ByteArray
	(*ProtoTransactionCoreInfoL)(nil),                  // 1: ZilliqaMessage.ProtoTransactionCoreInfoL
	(*ProtoTransactionL)(nil),                          // 2: ZilliqaMessage.ProtoTransactionL
	(*ProtoTransactionReceiptL)(nil),                   // 3: ZilliqaMessage.ProtoTransactionReceiptL
	(*ProtoTransactionWithReceiptL)(nil),               // 4: ZilliqaMessage.ProtoTransactionWithReceiptL
	(*ProtoAccountBaseL)(nil),                          // 5: ZilliqaMessage.ProtoAccountBaseL
	(*ProtoBlockBaseL)(nil),                            // 6: ZilliqaMessage.ProtoBlockBaseL
	(*ProtoBlockHeaderBaseL)(nil),                      // 7: ZilliqaMessage.ProtoBlockHeaderBaseL
	(*ProtoDSBlockL)(nil),                              // 8: ZilliqaMessage.ProtoDSBlockL
	(*ProtoMbInfoL)(nil),                               // 9: ZilliqaMessage.ProtoMbInfoL
	(*ProtoTxBlockL)(nil),                              // 10: ZilliqaMessage.ProtoTxBlockL
	(*ProtoBlockBaseL_CoSignaturesL)(nil),              // 11: ZilliqaMessage.ProtoBlockBaseL.CoSignaturesL
	(*ProtoDSBlockL_DSBlockHashSetL)(nil),              // 12: ZilliqaMessage.ProtoDSBlockL.DSBlockHashSetL
	(*ProtoDSBlockL_DSBlockHeaderL)(nil),               // 13: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL
	(*ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL)(nil), // 14: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.PowDSWinnersL
	(*ProtoDSBlockL_DSBlockHeaderL_VoteL)(nil),         // 15: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.VoteL
	(*ProtoDSBlockL_DSBlockHeaderL_ProposalL)(nil),     // 16: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.ProposalL
	(*ProtoTxBlockL_TxBlockHashSetL)(nil),              // 17: ZilliqaMessage.ProtoTxBlockL.TxBlockHashSetL
	(*ProtoTxBlockL_TxBlockHeaderL)(nil),               // 18: ZilliqaMessage.ProtoTxBlockL.TxBlockHeaderL
}
var file_message_proto_depIdxs = []int32{
	0,  // 0: ZilliqaMessage.ProtoTransactionCoreInfoL.senderpubkey:type_name -> ZilliqaMessage.ByteArray
	0,  // 1: ZilliqaMessage.ProtoTransactionCoreInfoL.amount:type_name -> ZilliqaMessage.ByteArray
	0,  // 2: ZilliqaMessage.ProtoTransactionCoreInfoL.gasprice:type_name -> ZilliqaMessage.ByteArray
	1,  // 3: ZilliqaMessage.ProtoTransactionL.info:type_name -> ZilliqaMessage.ProtoTransactionCoreInfoL
	0,  // 4: ZilliqaMessage.ProtoTransactionL.signature:type_name -> ZilliqaMessage.ByteArray
	2,  // 5: ZilliqaMessage.ProtoTransactionWithReceiptL.transaction:type_name -> ZilliqaMessage.ProtoTransactionL
	3,  // 6: ZilliqaMessage.ProtoTransactionWithReceiptL.receipt:type_name -> ZilliqaMessage.ProtoTransactionReceiptL
	0,  // 7: ZilliqaMessage.ProtoAccountBaseL.balance:type_name -> ZilliqaMessage.ByteArray
	11, // 8: ZilliqaMessage.ProtoBlockBaseL.cosigs:type_name -> ZilliqaMessage.ProtoBlockBaseL.CoSignaturesL
	13, // 9: ZilliqaMessage.ProtoDSBlockL.header:type_name -> ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL
	6,  // 10: ZilliqaMessage.ProtoDSBlockL.blockbase:type_name -> ZilliqaMessage.ProtoBlockBaseL
	18, // 11: ZilliqaMessage.ProtoTxBlockL.header:type_name -> ZilliqaMessage.ProtoTxBlockL.TxBlockHeaderL
	9,  // 12: ZilliqaMessage.ProtoTxBlockL.mbinfos:type_name -> ZilliqaMessage.ProtoMbInfoL
	6,  // 13: ZilliqaMessage.ProtoTxBlockL.blockbase:type_name -> ZilliqaMessage.ProtoBlockBaseL
	0,  // 14: ZilliqaMessage.ProtoBlockBaseL.CoSignaturesL.cs1:type_name -> ZilliqaMessage.ByteArray
	0,  // 15: ZilliqaMessage.ProtoBlockBaseL.CoSignaturesL.cs2:type_name -> ZilliqaMessage.ByteArray
	7,  // 16: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.blockheaderbase:type_name -> ZilliqaMessage.ProtoBlockHeaderBaseL
	0,  // 17: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.leaderpubkey:type_name -> ZilliqaMessage.ByteArray
	0,  // 18: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.gasprice:type_name -> ZilliqaMessage.ByteArray
	0,  // 19: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.swinfo:type_name -> ZilliqaMessage.ByteArray
	14, // 20: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.dswinners:type_name -> ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.PowDSWinnersL
	12, // 21: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.hash:type_name -> ZilliqaMessage.ProtoDSBlockL.DSBlockHashSetL
	0,  // 22: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.dsremoved:type_name -> ZilliqaMessage.ByteArray
	16, // 23: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.proposals:type_name -> ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.ProposalL
	0,  // 24: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.PowDSWinnersL.key:type_name -> ZilliqaMessage.ByteArray
	0,  // 25: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.PowDSWinnersL.val:type_name -> ZilliqaMessage.ByteArray
	15, // 26: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.ProposalL.dsvotes:type_name -> ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.VoteL
	15, // 27: ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.ProposalL.minervotes:type_name -> ZilliqaMessage.ProtoDSBlockL.DSBlockHeaderL.VoteL
	7,  // 28: ZilliqaMessage.ProtoTxBlockL.TxBlockHeaderL.blockheaderbase:type_name -> ZilliqaMessage.ProtoBlockHeaderBaseL
	0,  // 29: ZilliqaMessage.ProtoTxBlockL.TxBlockHeaderL.rewards:type_name -> ZilliqaMessage.ByteArray
	17, // 30: ZilliqaMessage.ProtoTxBlockL.TxBlockHeaderL.hash:type_name -> ZilliqaMessage.ProtoTxBlockL.TxBlockHashSetL
	0,  // 31: ZilliqaMessage.ProtoTxBlockL.TxBlockHeaderL.minerpubkey:type_name -> ZilliqaMessage.ByteArray
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ByteArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionCoreInfoL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionReceiptL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransactionWithReceiptL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAccountBaseL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlockBaseL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlockHeaderBaseL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlockL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMbInfoL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTxBlockL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBlockBaseL_CoSignaturesL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlockL_DSBlockHashSetL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlockL_DSBlockHeaderL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlockL_DSBlockHeaderL_PowDSWinnersL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlockL_DSBlockHeaderL_VoteL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDSBlockL_DSBlockHeaderL_ProposalL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTxBlockL_TxBlockHashSetL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTxBlockL_TxBlockHeaderL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ProtoMbInfoL_Shardid)(nil),
	}
	file_message_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
